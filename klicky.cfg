
[probe]
pin = PA3
z_offset = 4.42
x_offset = 0
y_offset = 19.75
speed = 5
lift_speed = 5.0
samples = 15
samples_result = median
sample_retract_dist = 1.5
samples_tolerance = 0.01
samples_tolerance_retries = 5




[gcode_macro User_Variables]
variable_verbose = True
variable_travel_speed = 200
variable_dock_speed = 50
variable_release_speed = 100
variable_z_drop_speed = 3
variable_home_z_height = 10
variable_z_endstop_x = 205.6
variable_z_endstop_y = 300
variable_park_toolhead = False
variable_parkposition_x = 150
variable_parkposition_y = 150
variable_parkposition_z = 15
variable_docklocation_x = 52.60
variable_docklocation_y = 300
variable_docklocation_z = 15
variable_dockarmslenght = 30
variable_umbilical_x = 15
variable_umbilical_y = 15
variable_umbilical = False
gcode = 
	{% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
	{% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
	{% set Ox = printer['configfile'].config["probe"]["x_offset"]|float %}
	{% set Oy = printer['configfile'].config["probe"]["y_offset"]|float %}
	{% set Oz = printer['configfile'].config["probe"]["z_offset"]|float %}
	{% if docklocation_z == 0 %}
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=docklocation_z VALUE={ home_z_height }
	{% endif %}
	{% if z_endstop_x != 0 or z_endstop_y != 0 %}
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }
	{% else %}
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }
	{% endif %}

[gcode_macro Probe_Variables]
variable_probe_attached = False
variable_probe_state = False
variable_probe_lock = False
variable_z_endstop_x = 0
variable_z_endstop_y = 0
gcode = 

[gcode_macro Homing_Variables]
default_parameter_reset = 0
gcode = 
	{% set R  = params.RESET %}
	{% if R %}
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=probe_lock VALUE={ False }
	{% endif %}

[gcode_macro Attach_Probe_Lock]
gcode = 
	Attach_Probe
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=probe_lock VALUE={ True }

[gcode_macro Dock_Probe_Unlock]
gcode = 
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=probe_lock VALUE={ False }
	Dock_Probe

[gcode_macro Attach_Probe]
gcode = 
	{% set P = printer["gcode_macro Probe_Variables"].probe_attached %}
	{% set L = printer["gcode_macro Probe_Variables"].probe_lock %}
	{% set V = printer["gcode_macro User_Variables"].verbose %}
	{% set Dx = printer["gcode_macro User_Variables"].docklocation_x %}
	{% set Dy = printer["gcode_macro User_Variables"].docklocation_y %}
	{% set Dz = printer["gcode_macro User_Variables"].docklocation_z %}
	{% set Da = printer["gcode_macro User_Variables"].dockarmslenght %}
	{% set Hzh = printer["gcode_macro User_Variables"].home_z_height|float %}
	{% set St = printer["gcode_macro User_Variables"].travel_speed * 60    %}
	{% if (printer.toolhead.position.z < Hzh) %}
	G1 Z{Hzh} F1200
	{% endif %}
	M400
	SAVE_GCODE_STATE name=_attachProbe
	SET_GCODE_OFFSET Z=0
	{% if not 'xy' in printer.toolhead.homed_axes %}
	{ action_raise_error("Must Home X and Y Axis First!") }
	{% elif not P and not L %}
	{% if V %}
	{ action_respond_info("Attaching Probe") }
	{% endif %}
	G90
	{% if (not 'z' in printer.toolhead.homed_axes) %}
	{% if V %}
	{ action_respond_info("Resetting Z position to zero") }
	{% endif %}
	SET_KINEMATIC_POSITION Z=0
	{% endif %}
	{% if (printer.toolhead.position.z < Hzh) %}
	G1 Z{Hzh} F1200
	{% endif %}
	Umbilical_Path
	G1 X{Dx} Y{Dy|int - Da|int} Z{Hzh} F{St}
	G1 Z{Dz} F600
	G1 X{Dx} Y{Dy} F1800
	G1 X{Dx} Y{Dy|int - Da|int} F6000
	G1 Z{Hzh} F600
	Park_Toolhead
	CheckProbe action=attach
	{% elif L %}
	{% if V %}
	{ action_respond_info("Probe locked!") }
	{% endif %}
	CheckProbe action=query
	{% else %}
	{% if V %}
	{ action_respond_info("Probe already attached!") }
	{% endif %}
	CheckProbe action=query
	{% endif %}
	RESTORE_GCODE_STATE name=_attachProbe

[gcode_macro Dock_Probe]
gcode = 
	{% set P = printer["gcode_macro Probe_Variables"].probe_attached %}
	{% set L = printer["gcode_macro Probe_Variables"].probe_lock %}
	{% set V = printer["gcode_macro User_Variables"].verbose %}
	{% set Dx = printer["gcode_macro User_Variables"].docklocation_x %}
	{% set Dy = printer["gcode_macro User_Variables"].docklocation_y %}
	{% set Dz = printer["gcode_macro User_Variables"].docklocation_z %}
	{% set Da = printer["gcode_macro User_Variables"].dockarmslenght %}
	{% set Hzh = printer["gcode_macro User_Variables"].home_z_height|float %}
	{% set St = printer["gcode_macro User_Variables"].travel_speed * 60    %}
	{% set Sd = printer["gcode_macro User_Variables"].dock_speed * 60    %}
	{% set Sr = printer["gcode_macro User_Variables"].release_speed * 60    %}
	{% set Sz = printer["gcode_macro User_Variables"].z_drop_speed * 60    %}
	M400
	SAVE_GCODE_STATE name=_dockProbe
	SET_GCODE_OFFSET Z=0
	{% if not 'xyz' in printer.toolhead.homed_axes %}
	{ action_raise_error("Must Home X, Y and Z Axis First!") }
	{% elif P and not L %}
	{% if V %}
	{ action_respond_info("Docking Probe") }
	{% endif %}
	G90
	{% if (printer.toolhead.position.z < Hzh) %}
	G1 Z{Hzh} F{Sz}
	{% endif %}
	Umbilical_Path
	G1 X{Dx} Y{Dy|int - Da|int} Z{Hzh} F{St}
	G1 Z{Dz} F{Sz}
	G1 X{Dx} Y{Dy} F{Sd}
	G1 X{Dx|int + 40} Y{Dy} F{Sr}
	G1 X{Dx|int + 40} Y{Dy|int - 5} Z{Hzh} F{St}
	Park_Toolhead
	CheckProbe action=dock
	{% elif L %}
	{% if V %}
	{ action_respond_info("Probe locked!") }
	{% endif %}
	CheckProbe action=query
	{% else %}
	{% if V %}
	{ action_respond_info("Probe already docked!") }
	{% endif %}
	CheckProbe action=query
	{% endif %}
	RESTORE_GCODE_STATE name=_dockProbe

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing = _QUAD_GANTRY_LEVEL
gcode = 
	{% set V = printer["gcode_macro User_Variables"].verbose %}
	{% if V %}
	{ action_respond_info("QG Level") }
	{% endif %}
	CheckProbe action=query
	Attach_Probe
	_QUAD_GANTRY_LEVEL {% for p in params
	%}{'%s=%s ' % (p, params[p])}{%
	endfor %}
	Dock_Probe

[gcode_macro PROBE_CALIBRATE]
rename_existing = _PROBE_CALIBRATE
gcode = 
	{% set Hzh = printer["gcode_macro User_Variables"].home_z_height|float %}
	{% set Sz = printer["gcode_macro User_Variables"].z_drop_speed * 60 %}
	{% set St = printer["gcode_macro User_Variables"].travel_speed %}
	G1 Z{Hzh} F{Sz}
	M400
	SAVE_GCODE_STATE NAME=_original_nozzle_location
	CheckProbe action=query
	Attach_Probe
	RESTORE_GCODE_STATE NAME=_original_nozzle_location MOVE=1 MOVE_SPEED={St}
	_PROBE_CALIBRATE {% for p in params
	%}{'%s=%s ' % (p, params[p])}{%
	endfor %}
	Dock_Probe
	RESTORE_GCODE_STATE NAME=_original_nozzle_location MOVE=1 MOVE_SPEED={St}

[gcode_macro PROBE_ACCURACY]
rename_existing = _PROBE_ACCURACY
gcode = 
	{% set Hzh = printer["gcode_macro User_Variables"].home_z_height|float %}
	{% set Sz = printer["gcode_macro User_Variables"].z_drop_speed * 60 %}
	{% set St = printer["gcode_macro User_Variables"].travel_speed %}
	G1 Z{Hzh} F{Sz}
	M400
	SAVE_GCODE_STATE NAME=_original_nozzle_location
	CheckProbe action=query
	Attach_Probe
	RESTORE_GCODE_STATE NAME=_original_nozzle_location MOVE=1 MOVE_SPEED={St}
	_PROBE_ACCURACY {% for p in params
	%}{'%s=%s ' % (p, params[p])}{%
	endfor %}
	RESTORE_GCODE_STATE NAME=_original_nozzle_location MOVE=1 MOVE_SPEED={St}

[force_move]
enable_force_move = True

[homing_override]
axes = xyz
gcode = 
	User_Variables
	{% set V = printer["gcode_macro User_Variables"].verbose %}
	{% set Hzh = printer["gcode_macro User_Variables"].home_z_height|float %}
	{% if (not 'z' in printer.toolhead.homed_axes) %}
	SET_KINEMATIC_POSITION Z=0
	G90
	G0 Z{Hzh} F600
	{% endif %}
	CheckProbe action=query
	{% set X, Y, Z = False, False, False %}
	{% if not 'X' in params
	and not 'Y' in params
	and not 'Z' in params %}
	{% set X, Y, Z = True, True, True %}
	{% else %}
	{% if 'X' in params %}
	{% set X = True %}
	{% endif %}
	{% if 'Y' in params %}
	{% set Y = True %}
	{% endif %}
	{% if 'Z' in params %}
	{% set Z = True %}
	{% endif %}
	{% if 'X' in params
	and 'Y' in params
	and 'Z' in params %}
	Homing_Variables reset=1
	{% endif %}
	{% endif %}
	{% if X %}
	{% if V %}
	{ action_respond_info("Homing X") }
	{% endif %}
	G28 X0
	{% endif %}
	{% if Y %}
	{% if V %}
	{ action_respond_info("Homing Y") }
	{% endif %}
	G28 Y0
	{% endif %}
	{% if Z %}
	{% if V %}
	{ action_respond_info("Homing Z") }
	{% endif %}
	{% if printer['configfile'].config["stepper_z"]["endstop_pin"] == 'probe:z_virtual_endstop' %}
	Attach_Probe
	{% endif %}
	Home_Z
	{% if printer['configfile'].config["stepper_z"]["endstop_pin"] == 'probe:z_virtual_endstop' %}
	Dock_Probe
	{% endif %}
	{% endif %}
	CheckProbe action=query
	Park_Toolhead

[gcode_macro Umbilical_Path]
gcode = 
	{% set Ux = printer["gcode_macro User_Variables"].umbilical_x %}
	{% set Uy = printer["gcode_macro User_Variables"].umbilical_y %}
	{% set U = printer["gcode_macro User_Variables"].umbilical    %}
	{% set Hzh = printer["gcode_macro User_Variables"].home_z_height|float %}
	{% set St = printer["gcode_macro User_Variables"].travel_speed * 60    %}
	{% if U %}
	G1 X{Ux} Y{Uy} Z{Hzh} F{St}
	{% endif %}

[gcode_macro Home_Z]
gcode = 
	{% set Zx = printer["gcode_macro Probe_Variables"].z_endstop_x         %}
	{% set Zy = printer["gcode_macro Probe_Variables"].z_endstop_y         %}
	{% set Hzh = printer["gcode_macro User_Variables"].home_z_height|float %}
	{% set St = printer["gcode_macro User_Variables"].travel_speed * 60    %}
	{% set Sz = printer["gcode_macro User_Variables"].z_drop_speed * 60    %}
	LOWERCURRENT
	{% if not 'xy' in printer.toolhead.homed_axes %}
	{ action_raise_error("Must Home X and Y Axis First!") }
	{% else %}
	{% if (not 'z' in printer.toolhead.homed_axes) %}
	{% if V %}
	{ action_respond_info("Resetting Z position to zero") }
	{% endif %}
	SET_KINEMATIC_POSITION Z=0
	{% endif %}
	G1 X{Zx} Y{Zy} Z{Hzh} F{St}
	G28 Z0
	G1 Z{Hzh} F{Sz}
	{% endif %}
	RESETCURRENT

[gcode_macro CheckProbe]
variable_probe_state = 0
default_parameter_action = 
gcode = 
	Query_Probe
	SetProbeState action={ ACTION }

[gcode_macro SetProbeState]
default_parameter_action = 
gcode = 
	{% set P = printer.probe.last_query %}
	{% set V = printer["gcode_macro User_Variables"].verbose %}
	{% if P %}
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=probe_attached VALUE={ False }
	{% else %}
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=probe_attached VALUE={ True }
	{% endif %}
	{% if params.ACTION == 'query' %}
	SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=probe_state VALUE={ P }
	{% endif %}
	{% if (not P and params.ACTION == 'dock') %}
	{ action_raise_error("Probe dock failed!") }
	{% endif %}
	{% if P and params.ACTION == 'attach' %}
	{ action_raise_error("Probe attach failed!") }
	{% endif %}

[gcode_macro Park_Toolhead]
gcode = 
	{% set P = printer["gcode_macro User_Variables"].park_toolhead %}
	{% set Px = printer["gcode_macro User_Variables"].parkposition_x %}
	{% set Py = printer["gcode_macro User_Variables"].parkposition_y %}
	{% set Pz = printer["gcode_macro User_Variables"].parkposition_z %}
	{% set St = printer["gcode_macro User_Variables"].travel_speed * 60 %}
	{% set V = printer["gcode_macro User_Variables"].verbose %}
	{% if (P and 'xyz' in printer.toolhead.homed_axes) %}
	{% if V %}
	{ action_respond_info("Parking Toolhead") }
	{% endif %}
	G90
	G1 X{Px} Y{Py} Z{Pz} F{St}
	{% endif %}
