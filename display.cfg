# [display]
# lcd_type = uc1701
# cs_pin = PC11
# a0_pin = PD2
# rst_pin = PC10
# encoder_pins = ^PC6,^PC7
# click_pin = ^!PA8
# contrast = 63
# spi_software_mosi_pin = PA7
# spi_software_miso_pin = PA6
# spi_software_sclk_pin = PA5

[neopixel fysetc_mini12864]
pin = PC12
chain_count = 60
initial_red = 0.1
initial_green = 0.5
initial_blue = 0.0
color_order = RGB

[delayed_gcode setdisplayneopixel]
initial_duration = 1
gcode = 
	SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
	SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
	SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3



# [display_glyph chamber]
# data = 
# 	................
# 	****************
# 	*....*....*....*
# 	*....*....*....*
# 	*....******....*
# 	*..............*
# 	*..............*
# 	*.....****.....*
# 	*.***.*..*.***.*
# 	*.....****.....*
# 	*......**......*
# 	*..............*
# 	*.************.*
# 	*...*......*...*
# 	****************
# 	................

# [display_glyph voron]
# data = 
# 	......***.......
# 	....*******.....
# 	...*********....
# 	.*************..
# 	*****..***..***.
# 	****..***..****.
# 	***..***..*****.
# 	**..***..******.
# 	******..***..**.
# 	*****..***..***.
# 	****..***..****.
# 	***..***..*****.
# 	.*************..
# 	...*********....
# 	....*******.....
# 	......***.......

# [display_template _vheater_temperature]
# param_heater_name = "extruder"
# text = 
# 	{% if param_heater_name in printer %}
# 	{% set heater = printer[param_heater_name] %}
# 	{% if param_heater_name == "heater_bed" %}
# 	{% if heater.target %}
# 	{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
# 	~bed_heat{frame}~
# 	{% else %}
# 	~bed~
# 	{% endif %}
# 	{% else %}
# 	~extruder~
# 	{% endif %}
# 	{ "%3.0f" % (heater.temperature,) }
# 	{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
# 	~right_arrow~
# 	{ "%0.0f" % (heater.target,) }
# 	{% endif %}
# 	~degrees~
# 	{% endif %}

# [display_data __voron_display extruder]
# position = 0, 0
# text = { render("_vheater_temperature", param_heater_name="extruder") }

# [display_data __voron_display fan]
# position = 0, 10
# text = 
# 	{% if 'fan' in printer %}
# 	{% set speed = printer.fan.speed %}
# 	{% if speed %}
# 	{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
# 	~fan{frame}~
# 	{% else %}
# 	~fan1~
# 	{% endif %}
# 	{ "{:>4.0%}".format(speed) }
# 	{% endif %}

# [display_data __voron_display bed]
# position = 1, 0
# text = { render("_vheater_temperature", param_heater_name="heater_bed") }

# [display_data __voron_display progress_text]
# position = 1, 10
# text = 
# 	{% set progress = printer.display_status.progress %}
# 	{ "{:^6.0%}".format(progress) }

# [display_data __voron_display progress_text2]
# position = 1, 10
# text = 
# 	{% set progress = printer.display_status.progress %}
# 	{ draw_progress_bar(1, 10, 6, progress) }

# [display_data __voron_display printing_time]
# position = 2, 10
# text = 
# 	{% set ptime = printer.idle_timeout.printing_time %}
# 	{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

# [display_data __voron_display chamber]
# position = 2, 0
# text = 
# 	{% set chamber = printer['temperature_sensor chamber'] %}
# 	~chamber~
# 	{ "%3.0f" % (chamber.temperature,) }
# 	~degrees~

# [display_data __voron_display print_status]
# position = 3, 0
# text = 
# 	{% if printer.display_status.message %}
# 	{ printer.display_status.message }
# 	{% elif printer.idle_timeout.printing_time %}
# 	{% set pos = printer.toolhead.position %}
# 	{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
# 	{% else %}
# 	{ "V2.247 " }
# 	~voron~
# 	{% endif %}

# [delayed_gcode clear_display]
# gcode = 
# 	M117
